<bound method aec_to_parallel_wrapper.observation_space of <pettingzoo.utils.conversions.aec_to_parallel_wrapper object at 0x000002CB4B612110>>
episode: 0
episode 0 terminated at 25
episode: 1
episode 1 terminated at 50
episode: 2
episode 2 terminated at 75
episode: 3
episode 3 terminated at 100
episode: 4
conv_output shape: torch.Size([32, 60])
conv_output shape: torch.Size([32, 60])
Combine(
  (input_net): Inputnet(
    (dynamic_input_layer): Sequential(
      (0): Linear(in_features=12, out_features=8, bias=True)
    )
  )
  (q_net): dddQ_Net(
    (conv_layers): Sequential(
      (0): Conv1d(1, 5, kernel_size=(3,), stride=(1,))
      (1): ReLU()
      (2): Conv1d(5, 10, kernel_size=(3,), stride=(1,))
      (3): ReLU()
      (4): Conv1d(10, 15, kernel_size=(3,), stride=(1,), padding=(1,))
      (5): ReLU()
      (6): Conv1d(15, 20, kernel_size=(3,), stride=(1,), padding=(1,))
      (7): ReLU()
      (8): Conv1d(20, 25, kernel_size=(3,), stride=(1,), padding=(1,))
      (9): ReLU()
      (10): Conv1d(25, 30, kernel_size=(3,), stride=(1,))
      (11): ReLU()
      (12): Flatten(start_dim=1, end_dim=-1)
    )
    (fc_layers): Sequential(
      (0): Linear(in_features=60, out_features=100, bias=True)
      (1): ReLU()
    )
    (V): Linear(in_features=100, out_features=1, bias=True)
    (A): Linear(in_features=100, out_features=5, bias=True)
  )
)
Traceback (most recent call last):
  File "c:\Users\amalj\OneDrive\Desktop\lecture materials\S3\Research Project\Local Git Repo\Adversarial-MATL\Transfer learning in simple adversarial MPE env\main.py", line 113, in <module>
    main()
  File "c:\Users\amalj\OneDrive\Desktop\lecture materials\S3\Research Project\Local Git Repo\Adversarial-MATL\Transfer learning in simple adversarial MPE env\main.py", line 108, in main
    loop_iteration(num_games, env_transfer_train, eval_env_transfer_train, opt, agent_models, agent_buffers)
  File "c:\Users\amalj\OneDrive\Desktop\lecture materials\S3\Research Project\Local Git Repo\Adversarial-MATL\Transfer learning in simple adversarial MPE env\utils.py", line 80, in loop_iteration
    loss[j] = model.train(buffer)
  File "c:\Users\amalj\OneDrive\Desktop\lecture materials\S3\Research Project\Local Git Repo\Adversarial-MATL\Transfer learning in simple adversarial MPE env\dddqn.py", line 119, in train
    for param in self.q_net.conv_layers.parameters():
  File "C:\Users\amalj\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1695, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'Combine' object has no attribute 'conv_layers'